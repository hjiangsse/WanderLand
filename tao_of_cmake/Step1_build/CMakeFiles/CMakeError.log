Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: cl 
Build flags: 
Id flags:  

The output was:
系统找不到指定的文件。


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: cl 
Build flags: 
Id flags: -c 

The output was:
系统找不到指定的文件。


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: cl 
Build flags: 
Id flags: -Aa 

The output was:
系统找不到指定的文件。


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: cl 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
系统找不到指定的文件。


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: cl 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
系统找不到指定的文件。


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: cl 
Build flags: 
Id flags:  

The output was:
系统找不到指定的文件。


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: cl 
Build flags: 
Id flags: -c 

The output was:
系统找不到指定的文件。


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: cl 
Build flags: 
Id flags: -Aa 

The output was:
系统找不到指定的文件。


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: cl 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
系统找不到指定的文件。


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: cl 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
系统找不到指定的文件。


Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: cl 
Build flags: 
Id flags:  

The output was:
系统找不到指定的文件。


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: cl 
Build flags: 
Id flags: -c 

The output was:
系统找不到指定的文件。


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: cl 
Build flags: 
Id flags: --c++ 

The output was:
系统找不到指定的文件。


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: cl 
Build flags: 
Id flags: --ec++ 

The output was:
系统找不到指定的文件。


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: cl 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
系统找不到指定的文件。


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: cl 
Build flags: 
Id flags:  

The output was:
系统找不到指定的文件。


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: cl 
Build flags: 
Id flags: -c 

The output was:
系统找不到指定的文件。


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: cl 
Build flags: 
Id flags: --c++ 

The output was:
系统找不到指定的文件。


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: cl 
Build flags: 
Id flags: --ec++ 

The output was:
系统找不到指定的文件。


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: cl 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
系统找不到指定的文件。


Checking whether the CXX compiler is IAR using "" did not match "IAR .+ Compiler":
Checking whether the CXX compiler is IAR using "" did not match "IAR .+ Compiler":
Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: cl 
Build flags: 
Id flags:  

The output was:
系统找不到指定的文件。


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: cl 
Build flags: 
Id flags: -c 

The output was:
系统找不到指定的文件。


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: cl 
Build flags: 
Id flags: -Aa 

The output was:
系统找不到指定的文件。


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: cl 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
系统找不到指定的文件。


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: cl 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
系统找不到指定的文件。


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: cl 
Build flags: 
Id flags:  

The output was:
系统找不到指定的文件。


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: cl 
Build flags: 
Id flags: -c 

The output was:
系统找不到指定的文件。


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: cl 
Build flags: 
Id flags: -Aa 

The output was:
系统找不到指定的文件。


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: cl 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
系统找不到指定的文件。


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: cl 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
系统找不到指定的文件。


Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: cl 
Build flags: 
Id flags:  

The output was:
系统找不到指定的文件。


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: cl 
Build flags: 
Id flags: -c 

The output was:
系统找不到指定的文件。


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: cl 
Build flags: 
Id flags: --c++ 

The output was:
系统找不到指定的文件。


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: cl 
Build flags: 
Id flags: --ec++ 

The output was:
系统找不到指定的文件。


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: cl 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
系统找不到指定的文件。


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: cl 
Build flags: 
Id flags:  

The output was:
系统找不到指定的文件。


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: cl 
Build flags: 
Id flags: -c 

The output was:
系统找不到指定的文件。


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: cl 
Build flags: 
Id flags: --c++ 

The output was:
系统找不到指定的文件。


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: cl 
Build flags: 
Id flags: --ec++ 

The output was:
系统找不到指定的文件。


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: cl 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
系统找不到指定的文件。


Checking whether the CXX compiler is IAR using "" did not match "IAR .+ Compiler":
Checking whether the CXX compiler is IAR using "" did not match "IAR .+ Compiler":
Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/cygwin64/bin/g++.exe 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: 閿欒锛?error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/cygwin64/bin/g++.exe 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: 閿欒锛?error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/cygwin64/bin/g++.exe 
Build flags: 
Id flags: -Aa 

The output was:
1
<鍛戒护琛?: 閿欒锛氳皳璇嶅悗缂哄皯鈥?鈥?CMakeCCompilerId.c:2:3: 閿欒锛?error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/cygwin64/bin/g++.exe 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: 閿欒锛?error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: 璀﹀憡锛欼SO C++ forbids converting a string constant to 鈥榗har*鈥?[-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:29: 璀﹀憡锛欼SO C++ forbids converting a string constant to 鈥榗har*鈥?[-Wwrite-strings]
  635 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:636:25: 璀﹀憡锛欼SO C++ forbids converting a string constant to 鈥榗har*鈥?[-Wwrite-strings]
  636 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:655:3: 璀﹀憡锛欼SO C++ forbids converting a string constant to 鈥榗har*鈥?[-Wwrite-strings]
  655 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:663:5: 閿欒锛歝annot declare 鈥?:main鈥?to be a global variable
  663 | int main(argc, argv) int argc; char *argv[];
      |     ^~~~
CMakeCCompilerId.c:663:10: 閿欒锛氣€榓rgc鈥欏湪姝や綔鐢ㄥ煙涓皻鏈０鏄?  663 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:663:16: 閿欒锛氣€榓rgv鈥欏湪姝や綔鐢ㄥ煙涓皻鏈０鏄?  663 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:663:20: 閿欒锛歟xpression list treated as compound expression in initializer [-fpermissive]
  663 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:663:38: 閿欒锛氣€榓rgv鈥欑殑瀛樺偍澶у皬鏈煡
  663 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:667:1: 閿欒锛歟xpected unqualified-id before 鈥榹鈥?token
  667 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/cygwin64/bin/g++.exe 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: 璀﹀憡锛氬凡寮冪敤鈥?mcpu=鈥欙紱璇锋敼鐢ㄢ€?mtune=鈥欐垨鈥?march=鈥?g++: 閿欒锛歶nrecognized command-line option 鈥?-target=arm-arm-none-eabi鈥?

Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/cygwin64/bin/g++.exe 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: 閿欒锛?error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/cygwin64/bin/g++.exe 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: 閿欒锛?error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/cygwin64/bin/g++.exe 
Build flags: 
Id flags: -Aa 

The output was:
1
<鍛戒护琛?: 閿欒锛氳皳璇嶅悗缂哄皯鈥?鈥?CMakeCCompilerId.c:2:3: 閿欒锛?error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/cygwin64/bin/g++.exe 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: 閿欒锛?error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: 璀﹀憡锛欼SO C++ forbids converting a string constant to 鈥榗har*鈥?[-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:29: 璀﹀憡锛欼SO C++ forbids converting a string constant to 鈥榗har*鈥?[-Wwrite-strings]
  635 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:636:25: 璀﹀憡锛欼SO C++ forbids converting a string constant to 鈥榗har*鈥?[-Wwrite-strings]
  636 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:655:3: 璀﹀憡锛欼SO C++ forbids converting a string constant to 鈥榗har*鈥?[-Wwrite-strings]
  655 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:663:5: 閿欒锛歝annot declare 鈥?:main鈥?to be a global variable
  663 | int main(argc, argv) int argc; char *argv[];
      |     ^~~~
CMakeCCompilerId.c:663:10: 閿欒锛氣€榓rgc鈥欏湪姝や綔鐢ㄥ煙涓皻鏈０鏄?  663 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:663:16: 閿欒锛氣€榓rgv鈥欏湪姝や綔鐢ㄥ煙涓皻鏈０鏄?  663 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:663:20: 閿欒锛歟xpression list treated as compound expression in initializer [-fpermissive]
  663 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:663:38: 閿欒锛氣€榓rgv鈥欑殑瀛樺偍澶у皬鏈煡
  663 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:667:1: 閿欒锛歟xpected unqualified-id before 鈥榹鈥?token
  667 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/cygwin64/bin/g++.exe 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: 璀﹀憡锛氬凡寮冪敤鈥?mcpu=鈥欙紱璇锋敼鐢ㄢ€?mtune=鈥欐垨鈥?march=鈥?g++: 閿欒锛歶nrecognized command-line option 鈥?-target=arm-arm-none-eabi鈥?

Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: cl 
Build flags: 
Id flags:  

The output was:
系统找不到指定的文件。


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: cl 
Build flags: 
Id flags: -c 

The output was:
系统找不到指定的文件。


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: cl 
Build flags: 
Id flags: --c++ 

The output was:
系统找不到指定的文件。


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: cl 
Build flags: 
Id flags: --ec++ 

The output was:
系统找不到指定的文件。


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: cl 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
系统找不到指定的文件。


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: cl 
Build flags: 
Id flags:  

The output was:
系统找不到指定的文件。


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: cl 
Build flags: 
Id flags: -c 

The output was:
系统找不到指定的文件。


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: cl 
Build flags: 
Id flags: --c++ 

The output was:
系统找不到指定的文件。


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: cl 
Build flags: 
Id flags: --ec++ 

The output was:
系统找不到指定的文件。


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: cl 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
系统找不到指定的文件。


Checking whether the CXX compiler is IAR using "" did not match "IAR .+ Compiler":
Checking whether the CXX compiler is IAR using "" did not match "IAR .+ Compiler":
Detecting C compiler ABI info failed to compile with the following output:
Change Dir: C:/Users/hjiang/github/WanderLand/tao_of_cmake/Step1_build/CMakeFiles/CMakeTmp

Run Build Command(s):nmake /nologo cmTC_90a0a\fast && 系统找不到指定的文件。
Generator: execution of make failed. Make command was: nmake /nologo cmTC_90a0a\fast && 



Determining if the C compiler works failed with the following output:
Change Dir: C:/Users/hjiang/github/WanderLand/tao_of_cmake/Step1_build/CMakeFiles/CMakeTmp

Run Build Command(s):nmake /nologo cmTC_b3084\fast && 系统找不到指定的文件。
Generator: execution of make failed. Make command was: nmake /nologo cmTC_b3084\fast && 


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/cygwin64/bin/g++.exe 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: 閿欒锛?error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/cygwin64/bin/g++.exe 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: 閿欒锛?error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/cygwin64/bin/g++.exe 
Build flags: 
Id flags: -Aa 

The output was:
1
<鍛戒护琛?: 閿欒锛氳皳璇嶅悗缂哄皯鈥?鈥?CMakeCCompilerId.c:2:3: 閿欒锛?error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/cygwin64/bin/g++.exe 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: 閿欒锛?error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: 璀﹀憡锛欼SO C++ forbids converting a string constant to 鈥榗har*鈥?[-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:29: 璀﹀憡锛欼SO C++ forbids converting a string constant to 鈥榗har*鈥?[-Wwrite-strings]
  635 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:636:25: 璀﹀憡锛欼SO C++ forbids converting a string constant to 鈥榗har*鈥?[-Wwrite-strings]
  636 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:655:3: 璀﹀憡锛欼SO C++ forbids converting a string constant to 鈥榗har*鈥?[-Wwrite-strings]
  655 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:663:5: 閿欒锛歝annot declare 鈥?:main鈥?to be a global variable
  663 | int main(argc, argv) int argc; char *argv[];
      |     ^~~~
CMakeCCompilerId.c:663:10: 閿欒锛氣€榓rgc鈥欏湪姝や綔鐢ㄥ煙涓皻鏈０鏄?  663 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:663:16: 閿欒锛氣€榓rgv鈥欏湪姝や綔鐢ㄥ煙涓皻鏈０鏄?  663 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:663:20: 閿欒锛歟xpression list treated as compound expression in initializer [-fpermissive]
  663 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:663:38: 閿欒锛氣€榓rgv鈥欑殑瀛樺偍澶у皬鏈煡
  663 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:667:1: 閿欒锛歟xpected unqualified-id before 鈥榹鈥?token
  667 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/cygwin64/bin/g++.exe 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: 璀﹀憡锛氬凡寮冪敤鈥?mcpu=鈥欙紱璇锋敼鐢ㄢ€?mtune=鈥欐垨鈥?march=鈥?g++: 閿欒锛歶nrecognized command-line option 鈥?-target=arm-arm-none-eabi鈥?

Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/cygwin64/bin/g++.exe 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: 閿欒锛?error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/cygwin64/bin/g++.exe 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: 閿欒锛?error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/cygwin64/bin/g++.exe 
Build flags: 
Id flags: -Aa 

The output was:
1
<鍛戒护琛?: 閿欒锛氳皳璇嶅悗缂哄皯鈥?鈥?CMakeCCompilerId.c:2:3: 閿欒锛?error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/cygwin64/bin/g++.exe 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: 閿欒锛?error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: 璀﹀憡锛欼SO C++ forbids converting a string constant to 鈥榗har*鈥?[-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:29: 璀﹀憡锛欼SO C++ forbids converting a string constant to 鈥榗har*鈥?[-Wwrite-strings]
  635 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:636:25: 璀﹀憡锛欼SO C++ forbids converting a string constant to 鈥榗har*鈥?[-Wwrite-strings]
  636 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:655:3: 璀﹀憡锛欼SO C++ forbids converting a string constant to 鈥榗har*鈥?[-Wwrite-strings]
  655 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:663:5: 閿欒锛歝annot declare 鈥?:main鈥?to be a global variable
  663 | int main(argc, argv) int argc; char *argv[];
      |     ^~~~
CMakeCCompilerId.c:663:10: 閿欒锛氣€榓rgc鈥欏湪姝や綔鐢ㄥ煙涓皻鏈０鏄?  663 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:663:16: 閿欒锛氣€榓rgv鈥欏湪姝や綔鐢ㄥ煙涓皻鏈０鏄?  663 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:663:20: 閿欒锛歟xpression list treated as compound expression in initializer [-fpermissive]
  663 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:663:38: 閿欒锛氣€榓rgv鈥欑殑瀛樺偍澶у皬鏈煡
  663 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:667:1: 閿欒锛歟xpected unqualified-id before 鈥榹鈥?token
  667 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/cygwin64/bin/g++.exe 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: 璀﹀憡锛氬凡寮冪敤鈥?mcpu=鈥欙紱璇锋敼鐢ㄢ€?mtune=鈥欐垨鈥?march=鈥?g++: 閿欒锛歶nrecognized command-line option 鈥?-target=arm-arm-none-eabi鈥?

Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Detecting C compiler ABI info failed to compile with the following output:
Change Dir: C:/Users/hjiang/github/WanderLand/tao_of_cmake/Step1_build/CMakeFiles/CMakeTmp

Run Build Command(s):nmake /nologo cmTC_2e40f\fast && 系统找不到指定的文件。
Generator: execution of make failed. Make command was: nmake /nologo cmTC_2e40f\fast && 



Determining if the C compiler works failed with the following output:
Change Dir: C:/Users/hjiang/github/WanderLand/tao_of_cmake/Step1_build/CMakeFiles/CMakeTmp

Run Build Command(s):nmake /nologo cmTC_07759\fast && 系统找不到指定的文件。
Generator: execution of make failed. Make command was: nmake /nologo cmTC_07759\fast && 


Detecting C compiler ABI info failed to compile with the following output:
Change Dir: C:/Users/hjiang/github/WanderLand/tao_of_cmake/Step1_build/CMakeFiles/CMakeTmp

Run Build Command(s):nmake /nologo cmTC_f59c9\fast && 系统找不到指定的文件。
Generator: execution of make failed. Make command was: nmake /nologo cmTC_f59c9\fast && 



Determining if the C compiler works failed with the following output:
Change Dir: C:/Users/hjiang/github/WanderLand/tao_of_cmake/Step1_build/CMakeFiles/CMakeTmp

Run Build Command(s):nmake /nologo cmTC_26a95\fast && 系统找不到指定的文件。
Generator: execution of make failed. Make command was: nmake /nologo cmTC_26a95\fast && 


Detecting C compiler ABI info failed to compile with the following output:
Change Dir: C:/Users/hjiang/github/WanderLand/tao_of_cmake/Step1_build/CMakeFiles/CMakeTmp

Run Build Command(s):nmake /nologo cmTC_17f68\fast && 系统找不到指定的文件。
Generator: execution of make failed. Make command was: nmake /nologo cmTC_17f68\fast && 



Determining if the C compiler works failed with the following output:
Change Dir: C:/Users/hjiang/github/WanderLand/tao_of_cmake/Step1_build/CMakeFiles/CMakeTmp

Run Build Command(s):nmake /nologo cmTC_aa134\fast && 系统找不到指定的文件。
Generator: execution of make failed. Make command was: nmake /nologo cmTC_aa134\fast && 


Detecting C compiler ABI info failed to compile with the following output:
Change Dir: C:/Users/hjiang/github/WanderLand/tao_of_cmake/Step1_build/CMakeFiles/CMakeTmp

Run Build Command(s):nmake /nologo cmTC_143e1\fast && 系统找不到指定的文件。
Generator: execution of make failed. Make command was: nmake /nologo cmTC_143e1\fast && 



Determining if the C compiler works failed with the following output:
Change Dir: C:/Users/hjiang/github/WanderLand/tao_of_cmake/Step1_build/CMakeFiles/CMakeTmp

Run Build Command(s):nmake /nologo cmTC_22069\fast && 系统找不到指定的文件。
Generator: execution of make failed. Make command was: nmake /nologo cmTC_22069\fast && 


Detecting C compiler ABI info failed to compile with the following output:
Change Dir: C:/Users/hjiang/github/WanderLand/tao_of_cmake/Step1_build/CMakeFiles/CMakeTmp

Run Build Command(s):nmake /nologo cmTC_78560\fast && 系统找不到指定的文件。
Generator: execution of make failed. Make command was: nmake /nologo cmTC_78560\fast && 



Determining if the C compiler works failed with the following output:
Change Dir: C:/Users/hjiang/github/WanderLand/tao_of_cmake/Step1_build/CMakeFiles/CMakeTmp

Run Build Command(s):nmake /nologo cmTC_3a595\fast && 系统找不到指定的文件。
Generator: execution of make failed. Make command was: nmake /nologo cmTC_3a595\fast && 


